ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [shikake_init aji_13.o] AT 805ECC40 ---
805ECC40:   setii GF(0) 0
805ECC4C:   mo_set_base_int [left_right_tbl aji_13.o]
805ECC54:   loop 0
805ECC5C:     mo_read_int2 LW(0) LW(1)
805ECC68:     mo_read_int3 LW(2) LW(3) LW(4)
805ECC78:     if_int_eq LW(1) 0
805ECC84:       loop_break
805ECC88:     endif
805ECC8C:     callsa [move_left_right aji_13.o]
805ECC94:   end_loop
805ECC98:   mo_set_base_int [up_down_tbl aji_13.o]
805ECCA0:   loop 0
805ECCA8:     mo_read_int2 LW(0) LW(1)
805ECCB4:     mo_read_int3 LW(2) LW(3) LW(4)
805ECCC4:     if_int_eq LW(1) 0
805ECCD0:       loop_break
805ECCD4:     endif
805ECCD8:     callsa [move_up_down aji_13.o]
805ECCE0:   end_loop
805ECCE4:   mo_set_base_int [r_tbl aji_13.o]
805ECCEC:   loop 0
805ECCF4:     mo_read_int2 LW(0) LW(1)
805ECD00:     mo_read_int3 LW(2) LW(3) LW(4)
805ECD10:     if_int_eq LW(1) 0
805ECD1C:       loop_break
805ECD20:     endif
805ECD24:     callsa [move_r aji_13.o]
805ECD2C:   end_loop
805ECD30:   begin_thread
805ECD34:     callc [mario_chk aji_13.o]
805ECD3C:   end_thread
805ECD40:   return
805ECD44:   end

--- START OF DISASSEMBLY FOR FUNCTION [move_left_right aji_13.o] AT 805EC320 ---
805EC320:   setii LW(5) LW(0)
805EC32C:   setii LW(6) LW(1)
805EC338:   setii LW(7) LW(2)
805EC344:   setii LW(8) LW(3)
805EC350:   setii LW(9) LW(4)
805EC35C:   if_int_ne LW(5) 0
805EC368:     callc [evt_hit_bind_mapobj evt_hit.o] LW(5) LW(6)
805EC378:   endif
805EC37C:   muli LW(7) 100
805EC388:   muli LW(8) 100
805EC394:   loop 0
805EC39C:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 LW(7) LW(8) LW(9)
805EC3B4: 0:
805EC3BC:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805EC3C4:     divf LW(0) 100.00
805EC3D0:     callc [evt_mapobj_trans evt_map.o] 1 LW(6) LW(0) 0 0
805EC3EC:     if_int_ne LW(5) 0
805EC3F8:       callc [evt_hit_bind_update evt_hit.o] LW(5)
805EC404:     endif
805EC408:     wait_frames 1
805EC410:     if_int_eq LW(1) 1
805EC41C:       goto 0
805EC424:     endif
805EC428:     wait_ms 300
805EC430:     loop 0
805EC438:       if_int_eq GF(0) 0
805EC444:         loop_break
805EC448:       endif
805EC44C:       wait_frames 1
805EC454:     end_loop
805EC458:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 LW(8) LW(7) LW(9)
805EC470: 1:
805EC478:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805EC480:     divf LW(0) 100.00
805EC48C:     callc [evt_mapobj_trans evt_map.o] 1 LW(6) LW(0) 0 0
805EC4A8:     if_int_ne LW(5) 0
805EC4B4:       callc [evt_hit_bind_update evt_hit.o] LW(5)
805EC4C0:     endif
805EC4C4:     wait_frames 1
805EC4CC:     if_int_eq LW(1) 1
805EC4D8:       goto 1
805EC4E0:     endif
805EC4E4:     wait_ms 300
805EC4EC:     loop 0
805EC4F4:       if_int_eq GF(0) 0
805EC500:         loop_break
805EC504:       endif
805EC508:       wait_frames 1
805EC510:     end_loop
805EC514:   end_loop
805EC518:   return
805EC51C:   end

--- START OF DISASSEMBLY FOR FUNCTION [move_up_down aji_13.o] AT 805EC520 ---
805EC520:   setii LW(5) LW(0)
805EC52C:   setii LW(6) LW(1)
805EC538:   setii LW(7) LW(2)
805EC544:   setii LW(8) LW(3)
805EC550:   setii LW(9) LW(4)
805EC55C:   if_int_ne LW(5) 0
805EC568:     callc [evt_hit_bind_mapobj evt_hit.o] LW(5) LW(6)
805EC578:   endif
805EC57C:   muli LW(7) 100
805EC588:   muli LW(8) 100
805EC594:   setii LW(4) LW(8)
805EC5A0:   if_string_eq LW(5) ["A_ugoku_2"]
805EC5AC:     setii LW(3) 1
805EC5B8:     setii GF(1) 0
805EC5C4:     begin_child_thread
805EC5C8:       loop 0
805EC5D0:         callc [evt_mario_get_name_hitobj_head evt_mario.o] LW(10)
805EC5DC:         callc [unk_aji_00003664 aji_13.o] LW(10) LW(5) LW(10)
805EC5F0:         if_int_ne LW(10) 0
805EC5FC:           callc [evt_mario_get_pos evt_mario.o] 0 LW(0) LW(1) LW(2)
805EC614:           if_float_gt LW(1) 0.10
805EC620:             setii GF(1) 1
805EC62C:           endif
805EC630:         endif
805EC634:         wait_frames 1
805EC63C:       end_loop
805EC640:     end_child_thread
805EC644:   else
805EC648:     setii LW(3) 0
805EC654:   endif
805EC658:   loop 0
805EC660:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 LW(7) LW(8) LW(9)
805EC678: 0:
805EC680:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805EC688:     divf LW(0) 100.00
805EC694:     callc [evt_mapobj_trans evt_map.o] 1 LW(6) 0 LW(0) 0
805EC6B0:     if_int_ne LW(5) 0
805EC6BC:       callc [evt_hit_bind_update evt_hit.o] LW(5)
805EC6C8:     endif
805EC6CC:     if_int_ne LW(3) 0
805EC6D8:       if_int_ne GF(1) 0
805EC6E4:         goto 5
805EC6EC:       endif
805EC6F0:     endif
805EC6F4:     wait_frames 1
805EC6FC:     if_int_eq LW(1) 1
805EC708:       goto 0
805EC710:     endif
805EC714: 5:
805EC71C:     if_int_ne LW(3) 0
805EC728:       if_int_eq GF(1) 0
805EC734:         setii LW(8) LW(4)
805EC740:       else
805EC744:         mulf LW(0) 100.00
805EC750:         setii LW(8) LW(0)
805EC75C:       endif
805EC760:       wait_ms 300
805EC768:       loop 0
805EC770:         if_int_eq GF(1) 0
805EC77C:           loop_break
805EC780:         endif
805EC784:         setii GF(1) 0
805EC790:         wait_ms 1000
805EC798:       end_loop
805EC79C:     else
805EC7A0:       wait_ms 300
805EC7A8:     endif
805EC7AC:     loop 0
805EC7B4:       if_int_eq GF(0) 0
805EC7C0:         loop_break
805EC7C4:       endif
805EC7C8:       wait_frames 1
805EC7D0:     end_loop
805EC7D4:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 LW(8) LW(7) LW(9)
805EC7EC: 1:
805EC7F4:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805EC7FC:     divf LW(0) 100.00
805EC808:     callc [evt_mapobj_trans evt_map.o] 1 LW(6) 0 LW(0) 0
805EC824:     if_int_ne LW(5) 0
805EC830:       callc [evt_hit_bind_update evt_hit.o] LW(5)
805EC83C:     endif
805EC840:     wait_frames 1
805EC848:     if_int_eq LW(1) 1
805EC854:       goto 1
805EC85C:     endif
805EC860:     setii LW(8) LW(4)
805EC86C:     wait_ms 300
805EC874:     loop 0
805EC87C:       if_int_eq GF(0) 0
805EC888:         loop_break
805EC88C:       endif
805EC890:       wait_frames 1
805EC898:     end_loop
805EC89C:   end_loop
805EC8A0:   return
805EC8A4:   end

--- START OF DISASSEMBLY FOR FUNCTION [move_r aji_13.o] AT 805EC8A8 ---
805EC8A8:   setii LW(5) LW(0)
805EC8B4:   setii LW(6) LW(1)
805EC8C0:   setii LW(7) LW(2)
805EC8CC:   setii LW(8) LW(3)
805EC8D8:   setii LW(9) LW(4)
805EC8E4:   if_int_ne LW(5) 0
805EC8F0:     callc [evt_hit_bind_mapobj evt_hit.o] LW(5) LW(6)
805EC900:   endif
805EC904:   muli LW(7) 100
805EC910:   muli LW(8) 100
805EC91C:   loop 0
805EC924:     callc [evt_sub_intpl_msec_init evt_sub.o] 0 LW(7) LW(8) LW(9)
805EC93C:     loop 0
805EC944:       callc [evt_sub_intpl_msec_get_value evt_sub.o]
805EC94C:       divf LW(0) 100.00
805EC958:       callc [evt_mapobj_rotate evt_map.o] 1 LW(6) 0 0 LW(0)
805EC974:       if_int_ne LW(5) 0
805EC980:         callc [evt_hit_bind_update evt_hit.o] LW(5)
805EC98C:       endif
805EC990:       if_int_eq GF(0) 1
805EC99C:         loop_break
805EC9A0:       endif
805EC9A4:       if_int_eq LW(1) 0
805EC9B0:         loop_break
805EC9B4:       endif
805EC9B8:       wait_frames 1
805EC9C0:     end_loop
805EC9C4:     loop 0
805EC9CC:       if_int_eq GF(0) 0
805EC9D8:         loop_break
805EC9DC:       endif
805EC9E0:       wait_frames 1
805EC9E8:     end_loop
805EC9EC:   end_loop
805EC9F0:   return
805EC9F4:   end
