ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [evt_ufo_init aji_03.o] AT 805DAE9C ---
805DAE9C:   loop 3
805DAEA4:     callc [evt_mapobj_flag_onoff evt_map.o] 1 1 ["S_hikari"] 1
805DAEBC:     wait_ms 100
805DAEC4:     callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_hikari"] 1
805DAEDC:     wait_ms 100
805DAEE4:   end_loop
805DAEE8:   wait_ms 300
805DAEF0:   callc [evt_mapobj_flag_onoff evt_map.o] 1 1 ["S_hikari"] 1
805DAF08:   wait_ms 300
805DAF10:   callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_hikari"] 1
805DAF28:   begin_thread
805DAF2C:     loop 0
805DAF34:       callc [evt_mapobj_flag_onoff evt_map.o] 1 1 ["S_tama_a"] 1
805DAF4C:       callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_tama_b"] 1
805DAF64:       wait_ms 500
805DAF6C:       callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_tama_a"] 1
805DAF84:       callc [evt_mapobj_flag_onoff evt_map.o] 1 1 ["S_tama_b"] 1
805DAF9C:       wait_ms 500
805DAFA4:       if_int_eq GF(14) 1
805DAFB0:         loop_break
805DAFB4:       endif
805DAFB8:     end_loop
805DAFBC:   end_thread
805DAFC0:   begin_thread
805DAFC4:     loop 0
805DAFCC:       callc [evt_sub_intpl_msec_init evt_sub.o] 0 0 36000 3000
805DAFE4: 0:
805DAFEC:       callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DAFF4:       divf LW(0) 100.00
805DB000:       callc [evt_mapobj_rotate evt_map.o] 1 ["S_hikari"] 0 LW(0) 0
805DB01C:       wait_frames 1
805DB024:       if_int_eq GF(14) 1
805DB030:         loop_break
805DB034:       endif
805DB038:       if_int_eq LW(1) 1
805DB044:         goto 0
805DB04C:       endif
805DB050:     end_loop
805DB054:   end_thread
805DB058:   callsa [ufo_main aji_03.o]
805DB060:   return
805DB064:   end

--- START OF DISASSEMBLY FOR FUNCTION [ufo_main aji_03.o] AT 805DA668 ---
805DA668:   setii GF(10) 0
805DA674:   setii GF(11) 0
805DA680:   setii GF(12) 0
805DA68C:   setii GF(14) 0
805DA698:   setii GW(10) 230
805DA6A4:   setii GW(11) 100
805DA6B0:   callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) 0 GW(11)
805DA6CC:   loop 0
805DA6D4:     callsa_tid [ufo_hand aji_03.o] LW(9)
805DA6E0:     loop 0
805DA6E8:       if_int_eq GF(10) 1
805DA6F4:         loop_break
805DA6F8:       endif
805DA6FC:       wait_frames 1
805DA704:     end_loop
805DA708:     setii GF(12) 1
805DA714:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(0) LW(1) LW(2)
805DA72C:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG7_CRANE_MOVE1"] LW(0) LW(1) LW(2) LW(3)
805DA748:     loop 0
805DA750:       addi GW(10) -1
805DA75C:       callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) 0 GW(11)
805DA778:       callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(0) LW(1) LW(2)
805DA790:       callc [evt_snd_sfx_pos evt_snd.o] LW(3) LW(0) LW(1) LW(2)
805DA7A8:       if_int_lt GW(10) -150
805DA7B4:         loop_break
805DA7B8:       endif
805DA7BC:       if_int_ne GF(10) 1
805DA7C8:         loop_break
805DA7CC:       endif
805DA7D0:       wait_frames 1
805DA7D8:     end_loop
805DA7DC:     callc [evt_snd_sfxoff evt_snd.o] LW(3)
805DA7E8:     loop 0
805DA7F0:       if_int_eq GF(11) 1
805DA7FC:         loop_break
805DA800:       endif
805DA804:       wait_frames 1
805DA80C:     end_loop
805DA810:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(0) LW(1) LW(2)
805DA828:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG7_CRANE_MOVE1"] LW(0) LW(1) LW(2) LW(3)
805DA844:     loop 0
805DA84C:       addi GW(11) -1
805DA858:       callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) 0 GW(11)
805DA874:       callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(0) LW(1) LW(2)
805DA88C:       callc [evt_snd_sfx_pos evt_snd.o] LW(3) LW(0) LW(1) LW(2)
805DA8A4:       if_int_lt GW(11) -100
805DA8B0:         loop_break
805DA8B4:       endif
805DA8B8:       if_int_ne GF(11) 1
805DA8C4:         loop_break
805DA8C8:       endif
805DA8CC:       wait_frames 1
805DA8D4:     end_loop
805DA8D8:     callc [evt_snd_sfxoff evt_snd.o] LW(3)
805DA8E4: 100:
805DA8EC:     if_int_eq GF(9) 1
805DA8F8:       wait_frames 1
805DA900:       goto 100
805DA908:     endif
805DA90C:     stop_tid LW(9)
805DA914:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DA92C:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG7_CRANE_MOVE1"] LW(2) LW(3) LW(4) LW(5)
805DA948:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 0 -600 2000
805DA960: 0:
805DA968:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DA970:     divf LW(0) 10.00
805DA97C:     callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) LW(0) GW(11)
805DA998:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DA9B0:     callc [evt_snd_sfx_pos evt_snd.o] LW(5) LW(2) LW(3) LW(4)
805DA9C8:     wait_frames 1
805DA9D0:     if_int_eq LW(1) 1
805DA9DC:       goto 0
805DA9E4:     endif
805DA9E8:     callc [item_chk aji_03.o] LW(0) LW(8)
805DA9F8:     if_int_eq LW(0) 1
805DAA04:       callss [hand_success aji_03.o]
805DAA0C:       setii LF(0) 1
805DAA18:     else
805DAA1C:       callss [hand_success aji_03.o]
805DAA24:       setii LF(0) 0
805DAA30:     endif
805DAA34:     if_int_eq LF(0) 1
805DAA40:       begin_thread
805DAA44:         callc [evt_item_move_3d_position evt_item.o] LW(8) GW(10) 105 GW(11) 2000 11
805DAA64:       end_thread
805DAA68:     endif
805DAA6C:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 -600 0 2000
805DAA84: 1:
805DAA8C:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DAA94:     divf LW(0) 10.00
805DAAA0:     callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) LW(0) GW(11)
805DAABC:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DAAD4:     callc [evt_snd_sfx_pos evt_snd.o] LW(5) LW(2) LW(3) LW(4)
805DAAEC:     wait_frames 1
805DAAF4:     if_int_eq LW(1) 1
805DAB00:       goto 1
805DAB08:     endif
805DAB0C:     callc [evt_snd_sfxoff evt_snd.o] LW(5)
805DAB18:     if_int_eq LF(0) 1
805DAB24:       begin_thread
805DAB28:         callc [evt_item_move_3d_position evt_item.o] LW(8) GW(10) 105 110 3000 11
805DAB48:       end_thread
805DAB4C:     endif
805DAB50:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DAB68:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG7_CRANE_MOVE1"] LW(2) LW(3) LW(4) LW(5)
805DAB84:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 GW(11) 110 3000
805DAB9C: 2:
805DABA4:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DABAC:     callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] GW(10) 0 LW(0)
805DABC8:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DABE0:     callc [evt_snd_sfx_pos evt_snd.o] LW(5) LW(2) LW(3) LW(4)
805DABF8:     wait_frames 1
805DAC00:     if_int_eq LW(1) 1
805DAC0C:       goto 2
805DAC14:     endif
805DAC18:     setii GW(11) 110
805DAC24:     callc [evt_snd_sfxoff evt_snd.o] LW(5)
805DAC30:     callc [evt_cam3d_evt_set evt_cam.o] 50 145 529 50 50 -13 2000 11
805DAC58:     if_int_eq LF(0) 1
805DAC64:       begin_thread
805DAC68:         callc [evt_item_move_3d_position evt_item.o] LW(8) 40 105 GW(11) 3000 11
805DAC88:       end_thread
805DAC8C:     endif
805DAC90:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DACA8:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG7_CRANE_MOVE1"] LW(2) LW(3) LW(4) LW(5)
805DACC4:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 GW(10) 40 3000
805DACDC: 3:
805DACE4:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DACEC:     callc [evt_mapobj_trans evt_map.o] 1 ["S_kure"] LW(0) 0 GW(11)
805DAD08:     callc [evt_mapobj_get_position evt_map.o] ["S_kure"] LW(2) LW(3) LW(4)
805DAD20:     callc [evt_snd_sfx_pos evt_snd.o] LW(5) LW(2) LW(3) LW(4)
805DAD38:     wait_frames 1
805DAD40:     if_int_eq LW(1) 1
805DAD4C:       goto 3
805DAD54:     endif
805DAD58:     setii GW(10) 40
805DAD64:     callc [evt_snd_sfxoff evt_snd.o] LW(5)
805DAD70:     if_int_eq LF(0) 1
805DAD7C:       begin_thread
805DAD80:         wait_ms 300
805DAD88:         callc [evt_item_set_move_dir_speed evt_item.o] LW(8) 0 0.00
805DAD9C:         callc [evt_item_set_gravity evt_item.o] LW(8) 1.00
805DADAC:         callc [evt_item_set_bound_rate evt_item.o] LW(8) 1.00
805DADBC:         callc [evt_item_set_jump_power evt_item.o] LW(8) 0.00
805DADCC:         callc [evt_item_set_bound_limit evt_item.o] LW(8) 0
805DADDC:         callc [evt_sub_random evt_sub.o] 30 LW(0)
805DADEC:         addi LW(0) 20
805DADF8:         callc [evt_item_set_bound_next_speed evt_item.o] LW(8) LW(0)
805DAE08:         callc [evt_sub_random evt_sub.o] 90 LW(0)
805DAE18:         addi LW(0) 45
805DAE24:         callc [evt_item_set_bound_next_dir evt_item.o] LW(8) LW(0)
805DAE34:         callc [evt_item_flag_on evt_item.o] LW(8) 512
805DAE44:         callc [evt_item_status_on evt_item.o] LW(8) 16
805DAE54:         callc [evt_item_change_mode evt_item.o] LW(8) 5
805DAE64:       end_thread
805DAE68:       callss [hand_release aji_03.o]
805DAE70:     else
805DAE74:       callss [hand_release aji_03.o]
805DAE7C:     endif
805DAE80:     setii GF(12) 0
805DAE8C:     return
805DAE90:   end_loop
805DAE94:   return
805DAE98:   end

--- START OF DISASSEMBLY FOR FUNCTION [ufo_hand aji_03.o] AT 805DA00C ---
805DA00C:   loop 0
805DA014:     setii GF(9) 1
805DA020:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 0 3000 1000
805DA038: 0:
805DA040:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DA048:     divf LW(0) 100.00
805DA054:     setff LW(2) LW(0)
805DA060:     setff LW(3) LW(0)
805DA06C:     mulf LW(3) -1.00
805DA078:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_a"] 0 0 LW(2)
805DA094:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_a"] 0 0 LW(2)
805DA0B0:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_b"] 0 0 LW(3)
805DA0CC:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_b"] 0 0 LW(3)
805DA0E8:     wait_frames 1
805DA0F0:     if_int_eq LW(1) 1
805DA0FC:       goto 0
805DA104:     endif
805DA108:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 3000 0 1000
805DA120: 1:
805DA128:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DA130:     divf LW(0) 100.00
805DA13C:     setff LW(2) LW(0)
805DA148:     setff LW(3) LW(0)
805DA154:     mulf LW(3) -1.00
805DA160:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_a"] 0 0 LW(2)
805DA17C:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_a"] 0 0 LW(2)
805DA198:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_b"] 0 0 LW(3)
805DA1B4:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_b"] 0 0 LW(3)
805DA1D0:     wait_frames 1
805DA1D8:     if_int_eq LW(1) 1
805DA1E4:       goto 1
805DA1EC:     endif
805DA1F0:     setii GF(9) 0
805DA1FC:     wait_frames 2
805DA204:   end_loop
805DA208:   return
805DA20C:   end

--- START OF DISASSEMBLY FOR FUNCTION [hand_success aji_03.o] AT 805DA260 ---
805DA260:   callc [evt_sub_intpl_msec_init evt_sub.o] 11 0 3000 1000
805DA278: 0:
805DA280:   callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DA288:   divf LW(0) 100.00
805DA294:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_a"] 0 0 LW(0)
805DA2B0:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_a"] 0 0 LW(0)
805DA2CC:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_b"] 0 0 LW(0)
805DA2E8:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_b"] 0 0 LW(0)
805DA304:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_c"] 0 0 LW(0)
805DA320:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_c"] 0 0 LW(0)
805DA33C:   wait_frames 1
805DA344:   if_int_eq LW(1) 1
805DA350:     goto 0
805DA358:   endif
805DA35C:   return
805DA360:   end

--- START OF DISASSEMBLY FOR FUNCTION [hand_release aji_03.o] AT 805DA564 ---
805DA564:   callc [evt_sub_intpl_msec_init evt_sub.o] 11 3000 0 1000
805DA57C: 0:
805DA584:   callc [evt_sub_intpl_msec_get_value evt_sub.o]
805DA58C:   divf LW(0) 100.00
805DA598:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_a"] 0 0 LW(0)
805DA5B4:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_a"] 0 0 LW(0)
805DA5D0:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_b"] 0 0 LW(0)
805DA5EC:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_b"] 0 0 LW(0)
805DA608:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_1_c"] 0 0 LW(0)
805DA624:   callc [evt_mapobj_rotate evt_map.o] 1 ["S_te_2_c"] 0 0 LW(0)
805DA640:   wait_frames 1
805DA648:   if_int_eq LW(1) 1
805DA654:     goto 0
805DA65C:   endif
805DA660:   return
805DA664:   end
