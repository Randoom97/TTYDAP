ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [hom_10_evt_resha_start hom_10.o] AT 805BE55C ---
805BE55C:   setii GSWF(3583) 1
805BE568:   setii GSWF(3579) 0
805BE574:   setii GSWF(3580) 0
805BE580:   setii GSWF(3581) 0
805BE58C:   callc [evt_mapobj_get_position evt_map.o] ["ranpu"] LW(0) LW(1) LW(2)
805BE5A4:   callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG6_TRAIN_BELL1"] LW(0) LW(1) LW(2) 0
805BE5C0:   wait_ms 200
805BE5C8:   callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_STG6_TRAIN_BELL1"] LW(0) LW(1) LW(2) 0
805BE5E4:   callc [evt_sub_get_mapname evt_sub.o] LW(0)
805BE5F0:   if_string_eq LW(0) ["gor_04"]
805BE5FC:     callc [evt_snd_sfxon evt_snd.o] ["SFX_STG6_TRAIN_MOVE1"] 0
805BE60C:   endif
805BE610:   if_string_eq LW(0) ["hom_00"]
805BE61C:     if_int_lt GSW(0) 339
805BE628:       callc [evt_snd_sfxon evt_snd.o] ["SFX_STG6_TRAIN_MOVE1_2"] 0
805BE638:     else
805BE63C:       callc [evt_snd_sfxon evt_snd.o] ["SFX_STG6_TRAIN_MOVE1_2_2"] 0
805BE64C:     endif
805BE650:   endif
805BE654:   if_string_eq LW(0) ["pik_00"]
805BE660:     callc [evt_snd_sfxon evt_snd.o] ["SFX_STG6_TRAIN_MOVE1_3"] 0
805BE670:   endif
805BE674:   callc [evt_sub_get_mapname evt_sub.o] LW(0)
805BE680:   if_string_eq LW(0) ["hom_00"]
805BE68C:     begin_thread
805BE690:       setff LW(0) 0.00
805BE69C:       loop 0
805BE6A4:         addf LW(0) GW(0)
805BE6B0:         callc [evt_mapobj_trans evt_map.o] 1 ["train"] LW(0) 0 0
805BE6CC:         wait_frames 1
805BE6D4:       end_loop
805BE6D8:     end_thread
805BE6DC:   endif
805BE6E0:   if_string_eq LW(0) ["gor_04"]
805BE6EC:     begin_thread
805BE6F0:       setff LW(0) 0.00
805BE6FC:       loop 0
805BE704:         addf LW(0) GW(0)
805BE710:         callc [evt_mapobj_trans evt_map.o] 1 ["train"] LW(0) 0 0
805BE72C:         wait_frames 1
805BE734:       end_loop
805BE738:     end_thread
805BE73C:   endif
805BE740:   begin_thread
805BE744:     setff GW(0) 0.00
805BE750:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 0 -1500 20000
805BE768: 0:
805BE770:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805BE778:     divf LW(0) 100.00
805BE784:     setff GW(0) LW(0)
805BE790:     wait_frames 1
805BE798:     if_int_eq LW(1) 1
805BE7A4:       goto 0
805BE7AC:     endif
805BE7B0:     loop 0
805BE7B8:       setff GW(0) -15.00
805BE7C4:       wait_frames 1
805BE7CC:     end_loop
805BE7D0:   end_thread
805BE7D4:   begin_thread
805BE7D8:     callsa_tid [evt_sub_stopwatch evt_sub.o] LW(0)
805BE7E4:     loop 0
805BE7EC:       setff GW(1) GW(0)
805BE7F8:       callc [evt_sub_get_stopwatch evt_sub.o] LW(0) LW(1)
805BE808:       if_int_gt LW(1) 1500
805BE814:         loop_break
805BE818:       endif
805BE81C:       wait_frames 1
805BE824:     end_loop
805BE828:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 0 -1000 1000
805BE840: 1:
805BE848:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805BE850:     divf LW(0) 100.00
805BE85C:     setff GW(1) GW(0)
805BE868:     addf GW(1) LW(0)
805BE874:     wait_frames 1
805BE87C:     if_int_eq LW(1) 1
805BE888:       goto 1
805BE890:     endif
805BE894:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 -1000 0 1000
805BE8AC: 2:
805BE8B4:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805BE8BC:     divf LW(0) 100.00
805BE8C8:     setff GW(1) GW(0)
805BE8D4:     addf GW(1) LW(0)
805BE8E0:     wait_frames 1
805BE8E8:     if_int_eq LW(1) 1
805BE8F4:       goto 2
805BE8FC:     endif
805BE900:     loop 0
805BE908:       setff GW(1) GW(0)
805BE914:       wait_frames 1
805BE91C:     end_loop
805BE920:   end_thread
805BE924:   return
805BE928:   end
