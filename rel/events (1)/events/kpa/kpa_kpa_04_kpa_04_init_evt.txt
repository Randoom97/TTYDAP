ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [kpa_04_init_evt kpa_04.o] AT 805C2A98 ---
805C2A98:   callc [evt_cam_letter_box_disable evt_cam.o] 1
805C2AA4:   callc [evt_npc_setup evt_npc.o] [npcEnt kpa_04.o]
805C2AB0:   callss [kpa_init kpa.o]
805C2AB8:   callc [evt_mario_set_pos evt_mario.o] -400 500 -5
805C2ACC:   callc [evt_mario_set_dir evt_mario.o] 90 0 0
805C2AE0:   setii LW(0) [kpa_act_stg2_mobj kpa_04.o]
805C2AEC:   callss [kpa_read_mobj kpa.o]
805C2AF4:   callsa [kpa_fall kpa_04.o]
805C2AFC:   callc [kpa_status_init kpa.o] 2 GSW(1221) GSW(1222)
805C2B10:   dbg_expr_to_string GSW(1222)
805C2B18:   setii LSW(1) 0
805C2B24:   setii LSWF(2) 1
805C2B30:   callsa [kpa_bgm_change kpa.o]
805C2B38:   callc [evt_snd_envoff evt_snd.o] 512
805C2B44:   callsa [kpa_time kpa.o]
805C2B4C:   callc [evt_sub_get_system_flag evt_sub.o] LW(0)
805C2B58:   if_bits_set LW(0) 2
805C2B64:     return
805C2B68:   endif
805C2B6C:   callc [evt_koopa_set_level evt_mario.o] GSW(1223)
805C2B78:   return
805C2B7C:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_init kpa.o] AT 805BD0A0 ---
805BD0A0:   callc [evt_mario_set_mode evt_mario.o] 2
805BD0AC:   callc [evt_mario_kill_party evt_mario.o] 0
805BD0B8:   callc [kpa_mobj_on kpa.o]
805BD0C0:   callc [kpa_score_disp_init kpa_act.o]
805BD0C8:   callc [evt_bero_get_entername evt_bero.o] LW(0)
805BD0D4:   if_string_eq LW(0) ["kpa_replay"]
805BD0E0:     setii GSW(1222) 180
805BD0EC:   else
805BD0F0:     if_string_ne LW(0) ["kpa_next_map"]
805BD0FC:       setii GSW(1221) 1
805BD108:       setii GSW(1222) 180
805BD114:     endif
805BD118:   endif
805BD11C:   callc [evt_cam_type_change evt_cam.o] 1 4
805BD12C:   setii LSWF(2) 0
805BD138:   setii LSWF(3) 0
805BD144:   setii LSWF(4) 0
805BD150:   setii LSWF(5) 0
805BD15C:   return
805BD160:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_read_mobj kpa.o] AT 805BD164 ---
805BD164:   mo_set_base_int LW(0)
805BD16C:   loop 100
805BD174:     mo_read_int LW(1)
805BD17C:     if_int_eq LW(1) -1
805BD188:       loop_break
805BD18C:     endif
805BD190:     callc [kpa_make_mobj_name kpa.o] LW(2)
805BD19C:     switchi LW(1)
805BD1A4:       case_int_eq 0
805BD1AC:         mo_read_int2 LW(3) LW(4)
805BD1B8:         callc [evt_mobj_koopa_ojama_blk evt_mobj.o] LW(2) LW(3) LW(4) 0 0 0 ["MOBJ_Lv1BigBlock"]
805BD1DC:       case_int_eq 1
805BD1E4:         mo_read_int2 LW(3) LW(4)
805BD1F0:         callc [evt_mobj_koopa_stone_blk evt_mobj.o] LW(2) LW(3) LW(4) 0 0 0 ["MOBJ_Lv2BigBlock"]
805BD214:       case_int_eq 2
805BD21C:         mo_read_int2 LW(3) LW(4)
805BD228:         callc [evt_mobj_koopa_brick evt_mobj.o] LW(2) LW(3) LW(4) 0 0 0 0 0
805BD250:       case_int_eq 4
805BD258:         mo_read_int2 LW(3) LW(4)
805BD264:         callc [evt_mobj_koopa_brick evt_mobj.o] LW(2) LW(3) LW(4) 0 0 2 0 0
805BD28C:       case_int_eq 3
805BD294:         mo_read_int2 LW(3) LW(4)
805BD2A0:         callc [evt_mobj_koopa_brick evt_mobj.o] LW(2) LW(3) LW(4) 0 0 1 0 0
805BD2C8:       case_int_eq 5
805BD2D0:         mo_read_int2 LW(3) LW(4)
805BD2DC:         callc [evt_mobj_koopa_brick evt_mobj.o] LW(2) LW(3) LW(4) 0 0 3 0 0
805BD304:       case_int_eq 6
805BD30C:         mo_read_int3 LW(3) LW(4) LW(5)
805BD31C:         callc [evt_mobj_koopa_badgeblk evt_mobj.o] LW(2) LW(3) LW(4) 0 LW(5) 0 0 0
805BD344:       case_int_eq 7
805BD34C:         mo_read_int3 LW(3) LW(4) LW(5)
805BD35C:         callc [evt_mobj_koopa_hidden_blk evt_mobj.o] LW(2) LW(3) LW(4) 0 LW(5) 1 0 0
805BD384:       case_int_eq 8
805BD38C:         mo_read_int2 LW(3) LW(4)
805BD398:         callc [evt_mobj_koopa_blk evt_mobj.o] LW(2) LW(3) LW(4) 0 0 0 0
805BD3BC:       case_int_eq 9
805BD3C4:         mo_read_int2 LW(3) LW(4)
805BD3D0:         callc [evt_mobj_koopa_dokan evt_mobj.o] 0 LW(2) LW(3) LW(4) 0 0 0
805BD3F4:       case_int_eq 10
805BD3FC:         mo_read_int2 LW(3) LW(4)
805BD408:         callc [evt_mobj_koopa_dokan evt_mobj.o] 1 LW(2) LW(3) LW(4) 0 0 0
805BD42C:       case_int_eq 11
805BD434:         mo_read_int2 LW(3) LW(4)
805BD440:         callc [evt_mobj_koopa_dokan evt_mobj.o] 2 LW(2) LW(3) LW(4) 0 0 0
805BD464:       case_int_eq 12
805BD46C:         mo_read_int2 LW(3) LW(4)
805BD478:         callc [evt_mobj_koopa_sango evt_mobj.o] LW(2) LW(3) LW(4) 0 0 0
805BD498:       case_int_eq 13
805BD4A0:         mo_read_int4 LW(3) LW(4) LW(5) LW(6)
805BD4B4:         callc [evt_mobj_koopa_fireber_dodai evt_mobj.o] 0 LW(2) LW(3) LW(4) 0 LW(5) LW(6) 0 0
805BD4E0:       case_int_eq 14
805BD4E8:         mo_read_int4 LW(3) LW(4) LW(5) LW(6)
805BD4FC:         callc [evt_mobj_koopa_fireber_dodai evt_mobj.o] 1 LW(2) LW(3) LW(4) 0 LW(5) LW(6) 0 0
805BD528:       case_int_eq 15
805BD530:         mo_read_int3 LW(3) LW(4) LW(5)
805BD540:         callc [evt_mobj_koopa_pole evt_mobj.o] ["pole"] LW(3) LW(4) 0 LW(5) [kpa_stage_clear kpa.o] LSWF(3)
805BD564:       case_int_eq 16
805BD56C:         mo_read_int3 LW(3) LW(4) LW(5)
805BD57C:         callc [evt_mobj_jumpstand_red evt_mobj.o] 0 LW(2) LW(3) LW(4) 0 LW(5) 0
805BD5A0:       case_int_eq 17
805BD5A8:         mo_read_int3 LW(3) LW(4) LW(5)
805BD5B8:         callc [evt_mobj_jumpstand_blue evt_mobj.o] 0 LW(2) LW(5) LW(3) LW(4) 0 0 0
805BD5E0:     end_switch
805BD5E4:   end_loop
805BD5E8:   return
805BD5EC:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_fall kpa_04.o] AT 805C2940 ---
805C2940:   setii LF(0) 0
805C294C:   loop 0
805C2954:     callc [evt_koopa_chk_dead evt_mario.o] LW(0)
805C2960:     if_int_ne LW(0) 0
805C296C:       setii LF(0) 1
805C2978:       loop_break
805C297C:     endif
805C2980:     callc [evt_mario_get_pos evt_mario.o] 0 LW(0) LW(1) LW(2)
805C2998:     if_int_lt LW(1) -20
805C29A4:       loop_break
805C29A8:     endif
805C29AC:     wait_frames 1
805C29B4:   end_loop
805C29B8:   if_int_eq LF(0) 0
805C29C4:     callss [kpa_fall_sub kpa.o]
805C29CC:   else
805C29D0:     callss [kpa_dead kpa.o]
805C29D8:   endif
805C29DC:   return
805C29E0:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_bgm_change kpa.o] AT 805BD9C8 ---
805BD9C8:   if_int_gt GSW(1222) 30
805BD9D4:     setii LW(2) 0
805BD9E0:   else
805BD9E4:     setii LW(2) 1
805BD9F0:   endif
805BD9F4:   setii LW(3) -1
805BDA00:   setii LW(4) -1
805BDA0C: 10:
805BDA14:   if_int_gt GSW(1222) 30
805BDA20:     setii LW(3) 0
805BDA2C:     addi LW(3) LSW(1)
805BDA38:   else
805BDA3C:     if_int_eq LW(2) 0
805BDA48:       setii LW(3) 3
805BDA54:       addi LW(3) LSW(1)
805BDA60:     else
805BDA64:       setii LW(3) 6
805BDA70:     endif
805BDA74:   endif
805BDA78:   callc [kpa_muteki_check kpa.o]
805BDA80:   if_int_ne LW(0) 0
805BDA8C:     setii LW(3) 7
805BDA98:     setii LW(2) 0
805BDAA4:   endif
805BDAA8:   if_int_eq LSWF(4) 1
805BDAB4:     setii LW(3) 8
805BDAC0:   endif
805BDAC4:   if_int_eq LSWF(5) 1
805BDAD0:     setii LW(3) 9
805BDADC:   endif
805BDAE0:   if_int_ne LW(3) LW(4)
805BDAEC:     setii LW(4) LW(3)
805BDAF8:     switchi LW(3)
805BDB00:       case_int_eq 0
805BDB08:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD1"]
805BDB18:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDB24:       case_int_eq 1
805BDB2C:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD3"]
805BDB3C:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDB48:       case_int_eq 2
805BDB50:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD4"]
805BDB60:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDB6C:       case_int_eq 3
805BDB74:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD1_UP1"]
805BDB84:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDB90:       case_int_eq 4
805BDB98:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD3_UP1"]
805BDBA8:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDBB4:       case_int_eq 5
805BDBBC:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD4_UP1"]
805BDBCC:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDBD8:       case_int_eq 6
805BDBE0:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_STGK_FIELD1_UP2"]
805BDBF0:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDBFC:       case_int_eq 7
805BDC04:         callc [evt_snd_bgmoff evt_snd.o] 512
805BDC10:         callc [evt_snd_bgmon evt_snd.o] 513 ["BGM_STGK_FIELD2"]
805BDC20:       case_int_eq 8
805BDC28:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_FF_KUPPA_DOWN1"]
805BDC38:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDC44:         return
805BDC48:       case_int_eq 9
805BDC50:         callc [evt_snd_bgmon evt_snd.o] 512 ["BGM_FF_KUPPA_GOAL1"]
805BDC60:         callc [evt_snd_bgmoff evt_snd.o] 513
805BDC6C:         return
805BDC70:     end_switch
805BDC74:     wait_ms 300
805BDC7C:   endif
805BDC80:   wait_frames 1
805BDC88:   goto 10
805BDC90:   return
805BDC94:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_time kpa.o] AT 805BDF94 ---
805BDF94:   callc [evt_seq_wait evt_seq.o] 2
805BDFA0:   setii LW(1) 180
805BDFAC:   subi LW(1) GSW(1222)
805BDFB8:   setii LW(3) LW(1)
805BDFC4:   divi LW(1) 10
805BDFD0:   modi LW(3) 10
805BDFDC:   muli LW(3) 1000
805BDFE8:   setii LF(0) 0
805BDFF4:   loop 0
805BDFFC:     if_int_ne LSWF(2) 0
805BE008:       loop_break
805BE00C:     endif
805BE010:     wait_frames 1
805BE018:   end_loop
805BE01C:   loop 0
805BE024:     callsa_tid [evt_sub_stopwatch evt_sub.o] LW(0)
805BE030:     loop 0
805BE038:       if_int_ne LSWF(3) 0
805BE044:         return
805BE048:       endif
805BE04C:       callc [evt_sub_get_stopwatch evt_sub.o] LW(0) LW(2)
805BE05C:       if_int_eq LF(0) 0
805BE068:         addi LW(2) LW(3)
805BE074:       endif
805BE078:       callc [kpa_set_time kpa.o] LW(2) LW(1) GSW(1222)
805BE08C:       if_int_ge LW(2) 10000
805BE098:         loop_break
805BE09C:       endif
805BE0A0:       wait_frames 1
805BE0A8:     end_loop
805BE0AC:     setii LF(0) 1
805BE0B8:     addi LW(1) 1
805BE0C4:     if_int_ge LW(1) 18
805BE0D0:       loop_break
805BE0D4:     endif
805BE0D8:   end_loop
805BE0DC:   callc [kpa_pole_hitoff kpa.o]
805BE0E4:   callss [kpa_dead kpa.o]
805BE0EC:   return
805BE0F0:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_fall_sub kpa.o] AT 805BD934 ---
805BD934:   callc [evt_cam_letter_box_disable evt_cam.o] 1
805BD940:   callc [evt_cam_letter_box_onoff evt_cam.o] 0 0
805BD950:   callc [evt_mario_key_onoff evt_mario.o] 0
805BD95C:   callc [evt_cam_ctrl_onoff evt_cam.o] 4 0
805BD96C:   callc [evt_mario_get_pos evt_mario.o] 0 LW(13) LW(14) LW(15)
805BD984:   loop 0
805BD98C:     callc [evt_mario_get_name_hitobj_ride evt_mario.o] LW(0)
805BD998:     if_string_ne LW(0) [zero_kpa_0000151c kpa.o]
805BD9A4:       loop_break
805BD9A8:     endif
805BD9AC:     wait_frames 1
805BD9B4:   end_loop
805BD9B8:   callss [kpa_dead kpa.o]
805BD9C0:   return
805BD9C4:   end

--- START OF DISASSEMBLY FOR FUNCTION [kpa_dead kpa.o] AT 805BD694 ---
805BD694:   if_int_eq LSWF(3) 1
805BD6A0:     return
805BD6A4:   endif
805BD6A8:   setii LSWF(3) 1
805BD6B4:   callc [evt_cam_letter_box_disable evt_cam.o] 1
805BD6C0:   callc [evt_cam_letter_box_onoff evt_cam.o] 0 0
805BD6D0:   callc [unk_kpa_00000a54 kpa.o]
805BD6D8:   callc [evt_mario_key_onoff evt_mario.o] 0
805BD6E4:   callc [evt_mario_cont_onoff evt_mario.o] 0
805BD6F0:   callc [evt_mario_adjust_dir evt_mario.o]
805BD6F8:   callc [kpa_nohitenemy_ct_clear kpa.o]
805BD700:   callc [evt_cam_ctrl_onoff evt_cam.o] 4 0
805BD710:   callc [evt_mario_set_motion evt_mario.o] 0
805BD71C:   callc [kpa_chg_pose kpa_act.o] ["KPA2_D_4"]
805BD728:   setii LSWF(4) 1
805BD734:   wait_ms 500
805BD73C:   callc [evt_mario_get_pos evt_mario.o] 0 LW(4) LW(5) LW(6)
805BD754:   setff LW(3) LW(5)
805BD760:   setff LW(0) LW(3)
805BD76C:   setff LW(1) 8.00
805BD778:   setff LW(2) -0.14
805BD784:   callc [evt_koopa_chk_dead evt_mario.o] LW(7)
805BD790:   if_int_eq LW(7) 1
805BD79C:     mulf LW(1) 0.70
805BD7A8:   endif
805BD7AC:   subf LW(3) 200.00
805BD7B8:   callc [evt_sub_get_mapname evt_sub.o] LW(15)
805BD7C4:   if_string_eq LW(15) ["kpa_03"]
805BD7D0:     setii LW(5) 150
805BD7DC:   else
805BD7E0:     setii LW(5) 155
805BD7EC:   endif
805BD7F0:   loop 0
805BD7F8:     if_int_ge LW(1) 0
805BD804:       setff LF(0) 0
805BD810:     else
805BD814:       setff LF(0) 1
805BD820:     endif
805BD824:     addf LW(0) LW(1)
805BD830:     addf LW(1) LW(2)
805BD83C:     if_int_lt LW(1) 0
805BD848:       if_int_eq LF(0) 0
805BD854:       endif
805BD858:     endif
805BD85C:     if_int_lt LW(0) LW(3)
805BD868:       loop_break
805BD86C:     endif
805BD870:     callc [evt_mario_set_pos evt_mario.o] LW(4) LW(0) LW(5)
805BD884:     wait_frames 1
805BD88C:   end_loop
805BD890:   if_int_lt GSW(1221) 99
805BD89C:     addi GSW(1221) 1
805BD8A8:   endif
805BD8AC:   callc [kpa_status_get_stage kpa.o] LW(0)
805BD8B8:   switchi LW(0)
805BD8C0:     case_int_eq 1
805BD8C8:       setii LW(1) ["kpa_02"]
805BD8D4:     case_int_eq 2
805BD8DC:       setii LW(1) ["kpa_03"]
805BD8E8:     case_int_eq 3
805BD8F0:       setii LW(1) ["kpa_05"]
805BD8FC:   end_switch
805BD900:   begin_thread
805BD904:     wait_ms 500
805BD90C:     callc [evt_cam_letter_box_disable evt_cam.o] 0
805BD918:   end_thread
805BD91C:   callc [evt_bero_mapchange evt_bero.o] LW(1) ["kpa_replay"]
805BD92C:   return
805BD930:   end
