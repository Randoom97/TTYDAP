ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [hom_10_evt_resha_sub rsh_06.o] AT 805E734C ---
805E734C:   setii GSWF(3583) 0
805E7358:   setff GW(0) 0.00
805E7364:   setff GW(1) 0.00
805E7370:   callsa [evt_sharin rsh_06.o]
805E7378:   callsa [evt_clank rsh_06.o]
805E7380:   setii LF(0) 0
805E738C:   callc [evt_sub_get_mapname evt_sub.o] LW(0)
805E7398:   if_string_eq LW(0) ["hom_10"]
805E73A4:     setii LF(0) 1
805E73B0:   endif
805E73B4:   if_string_eq LW(0) ["hom_11"]
805E73C0:     setii LF(0) 1
805E73CC:   endif
805E73D0:   if_string_eq LW(0) ["hom_12"]
805E73DC:     setii LF(0) 1
805E73E8:   endif
805E73EC:   if_string_eq LW(0) ["rsh_06_a"]
805E73F8:     setii LF(0) 1
805E7404:   endif
805E7408:   if_int_eq LF(0) 1
805E7414:     callsa [evt_bg rsh_06.o]
805E741C:   endif
805E7420:   callsa [evt_hoshi rsh_06.o]
805E7428:   callsa [evt_ramp rsh_06.o]
805E7430:   callc [evt_map_set_tevcallback evt_map.o] 1 [resha_tev rsh_06.o]
805E7440:   mo_set_base_int [pika_tbl rsh_06.o]
805E7448:   callc [evt_sub_get_mapname evt_sub.o] LW(0)
805E7454:   if_string_eq LW(0) ["rsh_06_a"]
805E7460:     mo_set_base_int [pika_tbl_rsh_06 rsh_06.o]
805E7468:   endif
805E746C:   loop 0
805E7474:     mo_read_int LW(0)
805E747C:     if_int_eq LW(0) 0
805E7488:       loop_break
805E748C:     endif
805E7490:     callc [evt_mapobj_flag_onoff evt_map.o] 1 1 LW(0) 16777216
805E74A8:     callc [evt_mapobj_flag_onoff evt_map.o] 1 0 LW(0) 256
805E74C0:     callc [evt_mapobj_flag_onoff evt_map.o] 1 1 LW(0) 268435456
805E74D8:   end_loop
805E74DC:   return
805E74E0:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_sharin rsh_06.o] AT 805E6138 ---
805E6138:   mo_set_base_int [sharinDt rsh_06.o]
805E6140:   loop 0
805E6148:     mo_read_int4 LW(0) LW(1) LW(2) LW(3)
805E615C:     if_int_eq LW(0) 0
805E6168:       loop_break
805E616C:     endif
805E6170:     callsa [evt_sharin_main rsh_06.o]
805E6178:   end_loop
805E617C:   return
805E6180:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_clank rsh_06.o] AT 805E63D8 ---
805E63D8:   mo_set_base_int [clankDt rsh_06.o]
805E63E0:   loop 0
805E63E8:     mo_read_int4 LW(0) LW(1) LW(2) LW(3)
805E63FC:     mo_read_int LW(4)
805E6404:     if_int_eq LW(0) 0
805E6410:       loop_break
805E6414:     endif
805E6418:     callsa [evt_clank_main rsh_06.o]
805E6420:   end_loop
805E6424:   return
805E6428:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_bg rsh_06.o] AT 805E642C ---
805E642C:   setff LW(10) 0.00
805E6438:   setff LW(11) 0.00
805E6444:   loop 0
805E644C:     setff LW(0) GW(0)
805E6458:     addf LW(10) LW(0)
805E6464:     if_float_gt LW(10) 0.00
805E6470:       addf LW(10) -800.00
805E647C:     endif
805E6480:     if_float_lt LW(10) -800.00
805E648C:       addf LW(10) 800.00
805E6498:     endif
805E649C:     addf LW(11) LW(0)
805E64A8:     if_float_gt LW(11) 0.00
805E64B4:       addf LW(11) -2400.00
805E64C0:     endif
805E64C4:     if_float_lt LW(11) -2400.00
805E64D0:       addf LW(11) 2400.00
805E64DC:     endif
805E64E0:     callc [evt_mapobj_trans evt_map.o] 1 ["jimen"] LW(10) 0 0
805E64FC:     callc [evt_mapobj_trans evt_map.o] 1 ["iwayama"] LW(11) 0 0
805E6518:     callc [evt_mapobj_trans evt_map.o] 1 ["yama"] LW(11) 0 0
805E6534:     wait_frames 1
805E653C:     loop 0
805E6544:       if_int_eq GSWF(3583) 1
805E6550:         loop_break
805E6554:       endif
805E6558:       wait_frames 1
805E6560:     end_loop
805E6564:   end_loop
805E6568:   return
805E656C:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_hoshi rsh_06.o] AT 805E6570 ---
805E6570:   setff LW(10) 0.00
805E657C:   loop 0
805E6584:     setff LW(9) GW(0)
805E6590:     divf LW(9) 30.00
805E659C:     mulf LW(9) 57.29
805E65A8:     addf LW(10) LW(9)
805E65B4:     if_int_gt LW(10) 360.00
805E65C0:       subf LW(10) 360.00
805E65CC:     endif
805E65D0:     if_int_lt LW(10) 0.00
805E65DC:       addf LW(10) 360.00
805E65E8:     endif
805E65EC:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_right"] LW(10) 0 0
805E6608:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_left"] LW(10) 0 0
805E6624:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_center"] LW(10) 0 0
805E6640:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_right_c"] LW(10) 0 0
805E665C:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_left_c"] LW(10) 0 0
805E6678:     callc [evt_mapobj_rotate evt_map.o] 0 ["hosi_center_c"] LW(10) 0 0
805E6694:     wait_frames 1
805E669C:     loop 0
805E66A4:       if_int_eq GSWF(3583) 1
805E66B0:         loop_break
805E66B4:       endif
805E66B8:       wait_frames 1
805E66C0:     end_loop
805E66C4:   end_loop
805E66C8:   return
805E66CC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_ramp rsh_06.o] AT 805E7264 ---
805E7264:   loop 0
805E726C:     callc [ramp_r rsh_06.o]
805E7274:     callc [evt_mapobj_rotate evt_map.o] 1 ["ranpu"] 0 0 LW(10)
805E7290:     callc [evt_mapobj_rotate evt_map.o] 1 ["ranpu_c"] 0 0 LW(10)
805E72AC:     wait_frames 1
805E72B4:     loop 0
805E72BC:       if_int_eq GSWF(3583) 1
805E72C8:         loop_break
805E72CC:       endif
805E72D0:       wait_frames 1
805E72D8:     end_loop
805E72DC:   end_loop
805E72E0:   return
805E72E4:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_sharin_main rsh_06.o] AT 805E5FDC ---
805E5FDC:   setff LW(10) 0.00
805E5FE8:   switchi LW(1)
805E5FF0:     case_int_eq 0
805E5FF8:       setff LW(11) 23.89
805E6004:     case_int_eq 1
805E600C:       setff LW(11) 31.14
805E6018:     case_int_eq 2
805E6020:       setff LW(11) 55.02
805E602C:   end_switch
805E6030:   loop 0
805E6038:     switchi LW(2)
805E6040:       case_int_eq 0
805E6048:         setff LW(9) GW(0)
805E6054:       case_int_eq 1
805E605C:         setff LW(9) GW(1)
805E6068:     end_switch
805E606C:     divf LW(9) LW(11)
805E6078:     mulf LW(9) 57.29
805E6084:     addf LW(10) LW(9)
805E6090:     if_int_gt LW(10) 360.00
805E609C:       subf LW(10) 360.00
805E60A8:     endif
805E60AC:     if_int_lt LW(10) 0.00
805E60B8:       addf LW(10) 360.00
805E60C4:     endif
805E60C8:     setff LW(12) LW(10)
805E60D4:     mulf LW(12) LW(3)
805E60E0:     callc [evt_mapobj_rotate evt_map.o] 1 LW(0) 0 0 LW(12)
805E60FC:     wait_frames 1
805E6104:     loop 0
805E610C:       if_int_eq GSWF(3583) 1
805E6118:         loop_break
805E611C:       endif
805E6120:       wait_frames 1
805E6128:     end_loop
805E612C:   end_loop
805E6130:   return
805E6134:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_clank_main rsh_06.o] AT 805E6238 ---
805E6238:   setff LW(10) 0.00
805E6244:   switchi LW(1)
805E624C:     case_int_eq 0
805E6254:       setff LW(11) 23.89
805E6260:     case_int_eq 1
805E6268:       setff LW(11) 31.14
805E6274:     case_int_eq 2
805E627C:       setff LW(11) 55.02
805E6288:   end_switch
805E628C:   loop 0
805E6294:     switchi LW(2)
805E629C:       case_int_eq 0
805E62A4:         setff LW(9) GW(0)
805E62B0:       case_int_eq 1
805E62B8:         setff LW(9) GW(1)
805E62C4:     end_switch
805E62C8:     divf LW(9) LW(11)
805E62D4:     mulf LW(9) 57.29
805E62E0:     addf LW(10) LW(9)
805E62EC:     if_int_gt LW(10) 360.00
805E62F8:       subf LW(10) 360.00
805E6304:     endif
805E6308:     if_int_lt LW(10) 0.00
805E6314:       addf LW(10) 360.00
805E6320:     endif
805E6324:     setff LW(12) LW(10)
805E6330:     mulf LW(12) LW(4)
805E633C:     callc [evt_sub_get_sincos evt_sub.o] LW(12) LW(13) LW(14)
805E6350:     mulf LW(13) LW(3)
805E635C:     mulf LW(14) LW(3)
805E6368:     subf LW(14) LW(3)
805E6374:     mulf LW(14) -1.00
805E6380:     callc [evt_mapobj_trans evt_map.o] 1 LW(0) LW(14) LW(13) 0.00
805E639C:     wait_frames 1
805E63A4:     loop 0
805E63AC:       if_int_eq GSWF(3583) 1
805E63B8:         loop_break
805E63BC:       endif
805E63C0:       wait_frames 1
805E63C8:     end_loop
805E63CC:   end_loop
805E63D0:   return
805E63D4:   end
