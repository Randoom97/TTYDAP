ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_02 tik_00.o] AT 805CBAB8 ---
805CBAB8:   if_int_eq LW(6) 0
805CBAC4:     callsa [evt_wall_02_00 tik_00.o]
805CBACC:     callsa [evt_wall_02_01 tik_00.o]
805CBAD4:     callsa [evt_wall_02_02 tik_00.o]
805CBADC:     callsa [evt_wall_02_03 tik_00.o]
805CBAE4:   endif
805CBAE8:   return
805CBAEC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_02_00 tik_00.o] AT 805CB6B8 ---
805CB6B8:   begin_thread
805CB6BC:     if_int_eq LW(1) 0
805CB6C8:     else
805CB6CC:       wait_ms 300
805CB6D4:     endif
805CB6D8:     callc [evt_mapobj_get_position evt_map.o] ["ie_2_1"] LW(0) LW(1) LW(2)
805CB6F0:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB70C:   end_thread
805CB710:   if_int_eq LW(1) 0
805CB71C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB734:   else
805CB738:     wait_ms 300
805CB740:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB758:   endif
805CB75C:   loop 0
805CB764:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB76C:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_2_1"] 0 0 LW(0)
805CB788:     if_int_eq LW(1) 0
805CB794:       loop_break
805CB798:     endif
805CB79C:     wait_frames 1
805CB7A4:   end_loop
805CB7A8:   return
805CB7AC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_02_01 tik_00.o] AT 805CB7B0 ---
805CB7B0:   begin_thread
805CB7B4:     if_int_eq LW(1) 0
805CB7C0:       wait_ms 100
805CB7C8:     else
805CB7CC:       wait_ms 200
805CB7D4:     endif
805CB7D8:     callc [evt_mapobj_get_position evt_map.o] ["ie_2_2"] LW(0) LW(1) LW(2)
805CB7F0:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB80C:   end_thread
805CB810:   if_int_eq LW(1) 0
805CB81C:     wait_ms 100
805CB824:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB83C:   else
805CB840:     wait_ms 200
805CB848:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB860:   endif
805CB864:   loop 0
805CB86C:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB874:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_2_2"] 0 0 LW(0)
805CB890:     if_int_eq LW(1) 0
805CB89C:       loop_break
805CB8A0:     endif
805CB8A4:     wait_frames 1
805CB8AC:   end_loop
805CB8B0:   return
805CB8B4:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_02_02 tik_00.o] AT 805CB8B8 ---
805CB8B8:   begin_thread
805CB8BC:     if_int_eq LW(1) 0
805CB8C8:       wait_ms 200
805CB8D0:     else
805CB8D4:       wait_ms 100
805CB8DC:     endif
805CB8E0:     callc [evt_mapobj_get_position evt_map.o] ["ie_2_3"] LW(0) LW(1) LW(2)
805CB8F8:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB914:   end_thread
805CB918:   if_int_eq LW(1) 0
805CB924:     wait_ms 200
805CB92C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB944:   else
805CB948:     wait_ms 100
805CB950:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB968:   endif
805CB96C:   loop 0
805CB974:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB97C:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_2_3"] 0 0 LW(0)
805CB998:     if_int_eq LW(1) 0
805CB9A4:       loop_break
805CB9A8:     endif
805CB9AC:     wait_frames 1
805CB9B4:   end_loop
805CB9B8:   return
805CB9BC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_02_03 tik_00.o] AT 805CB9C0 ---
805CB9C0:   begin_thread
805CB9C4:     if_int_eq LW(1) 0
805CB9D0:       wait_ms 300
805CB9D8:     else
805CB9DC:     endif
805CB9E0:     callc [evt_mapobj_get_position evt_map.o] ["ie_2_4"] LW(0) LW(1) LW(2)
805CB9F8:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CBA14:   end_thread
805CBA18:   if_int_eq LW(1) 0
805CBA24:     wait_ms 300
805CBA2C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CBA44:   else
805CBA48:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CBA60:   endif
805CBA64:   loop 0
805CBA6C:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CBA74:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_2_4"] 0 0 LW(0)
805CBA90:     if_int_eq LW(1) 0
805CBA9C:       loop_break
805CBAA0:     endif
805CBAA4:     wait_frames 1
805CBAAC:   end_loop
805CBAB0:   return
805CBAB4:   end
