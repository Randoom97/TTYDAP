ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_01 tik_00.o] AT 805CB484 ---
805CB484:   if_int_eq LW(6) 0
805CB490:     callsa [evt_wall_01_00 tik_00.o]
805CB498:     callsa [evt_wall_01_01 tik_00.o]
805CB4A0:     callsa [evt_wall_01_02 tik_00.o]
805CB4A8:   endif
805CB4AC:   return
805CB4B0:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_01_00 tik_00.o] AT 805CB174 ---
805CB174:   begin_thread
805CB178:     if_int_eq LW(1) 0
805CB184:     else
805CB188:       wait_ms 300
805CB190:     endif
805CB194:     callc [evt_mapobj_get_position evt_map.o] ["ie_1_1"] LW(0) LW(1) LW(2)
805CB1AC:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB1C8:   end_thread
805CB1CC:   if_int_eq LW(1) 0
805CB1D8:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB1F0:   else
805CB1F4:     wait_ms 300
805CB1FC:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB214:   endif
805CB218:   loop 0
805CB220:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB228:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_1_1"] 0 0 LW(0)
805CB244:     if_int_eq LW(1) 0
805CB250:       loop_break
805CB254:     endif
805CB258:     wait_frames 1
805CB260:   end_loop
805CB264:   return
805CB268:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_01_01 tik_00.o] AT 805CB26C ---
805CB26C:   begin_thread
805CB270:     if_int_eq LW(1) 0
805CB27C:       wait_ms 100
805CB284:     else
805CB288:       wait_ms 200
805CB290:     endif
805CB294:     callc [evt_mapobj_get_position evt_map.o] ["ie_1_2"] LW(0) LW(1) LW(2)
805CB2AC:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB2C8:   end_thread
805CB2CC:   if_int_eq LW(1) 0
805CB2D8:     wait_ms 100
805CB2E0:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB2F8:   else
805CB2FC:     wait_ms 200
805CB304:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB31C:   endif
805CB320:   loop 0
805CB328:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB330:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_1_2"] 0 0 LW(0)
805CB34C:     if_int_eq LW(1) 0
805CB358:       loop_break
805CB35C:     endif
805CB360:     wait_frames 1
805CB368:   end_loop
805CB36C:   return
805CB370:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_01_02 tik_00.o] AT 805CB374 ---
805CB374:   begin_thread
805CB378:     if_int_eq LW(1) 0
805CB384:       wait_ms 200
805CB38C:     else
805CB390:       wait_ms 100
805CB398:     endif
805CB39C:     callc [evt_mapobj_get_position evt_map.o] ["ie_1_3"] LW(0) LW(1) LW(2)
805CB3B4:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CB3D0:   end_thread
805CB3D4:   if_int_eq LW(1) 0
805CB3E0:     wait_ms 200
805CB3E8:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CB400:   else
805CB404:     wait_ms 100
805CB40C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CB424:   endif
805CB428:   loop 0
805CB430:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CB438:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_1_3"] 0 0 LW(0)
805CB454:     if_int_eq LW(1) 0
805CB460:       loop_break
805CB464:     endif
805CB468:     wait_frames 1
805CB470:   end_loop
805CB474:   return
805CB478:   end
