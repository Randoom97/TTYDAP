ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_03 tik_00.o] AT 805CBFD8 ---
805CBFD8:   if_int_eq LW(6) 0
805CBFE4:     callsa [evt_wall_03_00 tik_00.o]
805CBFEC:     callsa [evt_wall_03_01 tik_00.o]
805CBFF4:     callsa [evt_wall_03_02 tik_00.o]
805CBFFC:     callsa [evt_wall_03_03 tik_00.o]
805CC004:   endif
805CC008:   return
805CC00C:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_03_00 tik_00.o] AT 805CBBD8 ---
805CBBD8:   begin_thread
805CBBDC:     if_int_eq LW(1) 0
805CBBE8:     else
805CBBEC:       wait_ms 300
805CBBF4:     endif
805CBBF8:     callc [evt_mapobj_get_position evt_map.o] ["ie_3_1"] LW(0) LW(1) LW(2)
805CBC10:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CBC2C:   end_thread
805CBC30:   if_int_eq LW(1) 0
805CBC3C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CBC54:   else
805CBC58:     wait_ms 300
805CBC60:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CBC78:   endif
805CBC7C:   loop 0
805CBC84:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CBC8C:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_3_1"] 0 0 LW(0)
805CBCA8:     if_int_eq LW(1) 0
805CBCB4:       loop_break
805CBCB8:     endif
805CBCBC:     wait_frames 1
805CBCC4:   end_loop
805CBCC8:   return
805CBCCC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_03_01 tik_00.o] AT 805CBCD0 ---
805CBCD0:   begin_thread
805CBCD4:     if_int_eq LW(1) 0
805CBCE0:       wait_ms 100
805CBCE8:     else
805CBCEC:       wait_ms 200
805CBCF4:     endif
805CBCF8:     callc [evt_mapobj_get_position evt_map.o] ["ie_3_2"] LW(0) LW(1) LW(2)
805CBD10:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CBD2C:   end_thread
805CBD30:   if_int_eq LW(1) 0
805CBD3C:     wait_ms 100
805CBD44:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CBD5C:   else
805CBD60:     wait_ms 200
805CBD68:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CBD80:   endif
805CBD84:   loop 0
805CBD8C:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CBD94:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_3_2"] 0 0 LW(0)
805CBDB0:     if_int_eq LW(1) 0
805CBDBC:       loop_break
805CBDC0:     endif
805CBDC4:     wait_frames 1
805CBDCC:   end_loop
805CBDD0:   return
805CBDD4:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_03_02 tik_00.o] AT 805CBDD8 ---
805CBDD8:   begin_thread
805CBDDC:     if_int_eq LW(1) 0
805CBDE8:       wait_ms 200
805CBDF0:     else
805CBDF4:       wait_ms 100
805CBDFC:     endif
805CBE00:     callc [evt_mapobj_get_position evt_map.o] ["ie_3_3"] LW(0) LW(1) LW(2)
805CBE18:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CBE34:   end_thread
805CBE38:   if_int_eq LW(1) 0
805CBE44:     wait_ms 200
805CBE4C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CBE64:   else
805CBE68:     wait_ms 100
805CBE70:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CBE88:   endif
805CBE8C:   loop 0
805CBE94:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CBE9C:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_3_3"] 0 0 LW(0)
805CBEB8:     if_int_eq LW(1) 0
805CBEC4:       loop_break
805CBEC8:     endif
805CBECC:     wait_frames 1
805CBED4:   end_loop
805CBED8:   return
805CBEDC:   end

--- START OF DISASSEMBLY FOR FUNCTION [evt_wall_03_03 tik_00.o] AT 805CBEE0 ---
805CBEE0:   begin_thread
805CBEE4:     if_int_eq LW(1) 0
805CBEF0:       wait_ms 300
805CBEF8:     else
805CBEFC:     endif
805CBF00:     callc [evt_mapobj_get_position evt_map.o] ["ie_3_4"] LW(0) LW(1) LW(2)
805CBF18:     callc [evt_snd_sfxon_3d evt_snd.o] ["SFX_HOUSE_DOWN1"] LW(0) LW(1) LW(2) 0
805CBF34:   end_thread
805CBF38:   if_int_eq LW(1) 0
805CBF44:     wait_ms 300
805CBF4C:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 0 180 500
805CBF64:   else
805CBF68:     callc [evt_sub_intpl_msec_init evt_sub.o] 2 180 0 500
805CBF80:   endif
805CBF84:   loop 0
805CBF8C:     callc [evt_sub_intpl_msec_get_value evt_sub.o]
805CBF94:     callc [evt_mapobj_rotate evt_map.o] 1 ["ie_3_4"] 0 0 LW(0)
805CBFB0:     if_int_eq LW(1) 0
805CBFBC:       loop_break
805CBFC0:     endif
805CBFC4:     wait_frames 1
805CBFCC:   end_loop
805CBFD0:   return
805CBFD4:   end
