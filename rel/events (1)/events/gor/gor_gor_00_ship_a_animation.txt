ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [ship_a_animation gor_00.o] AT 805DF844 ---
805DF844:   callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_fune_a"] 1
805DF85C:   callc [evt_mapobj_flag_onoff evt_map.o] 1 0 ["S_a_hikinami"] 1
805DF874:   callc [evt_hitobj_onoff evt_hit.o] ["A_fune_a"] 1 1
805DF888:   callc [evt_map_set_tevcallback evt_map.o] 1 [alpha_tev gor_00.o]
805DF898:   callc [evt_mapobj_flag_onoff evt_map.o] 0 1 ["S_a_hikinami"] 16777216
805DF8B0:   callc [evt_mapobj_flag_onoff evt_map.o] 0 0 ["S_a_hikinami"] 256
805DF8C8:   callc [evt_hit_bind_mapobj evt_hit.o] ["A_fune_a"] ["S_fune_a"]
805DF8D8:   callsa_tid [ship_a_kaji_animation gor_00.o] LW(10)
805DF8E4:   callsa_tid [ship_a_wakka_animation gor_00.o] LW(11)
805DF8F0:   callsa_tid [ship_a_entotsu_animation gor_00.o] LW(12)
805DF8FC:   callsa_tid [ship_a_neji_animation gor_00.o] LW(13)
805DF908:   callsa_tid [ship_a_yure_animation gor_00.o] LW(14)
805DF914:   loop 0
805DF91C:     callc [evt_mapobj_trans evt_map.o] 1 ["S_fune_a"] GW(4) GW(8) 0
805DF938:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_fune_a"] 0 GW(7) GW(5)
805DF954:     if_int_eq GF(5) 1
805DF960:       setff GW(11) GW(4)
805DF96C:     endif
805DF970:     callc [evt_mapobj_trans evt_map.o] 1 ["S_a_hikinami"] GW(11) 0 0
805DF98C:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_a_hikinami"] 0 GW(7) 0
805DF9A8:     callc [evt_hit_bind_update evt_hit.o] ["A_fune_a"]
805DF9B4:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_f_drin"] GW(0) 0 0
805DF9D0:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_f_wa_l"] 0 0 GW(1)
805DF9EC:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_f_wa_r"] 0 0 GW(1)
805DFA08:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_f_en01"] 0 GW(2) 0
805DFA24:     callc [evt_mapobj_rotate evt_map.o] 1 ["S_skr"] GW(3) 0 0
805DFA40:     wait_frames 1
805DFA48:   end_loop
805DFA4C:   return
805DFA50:   end

--- START OF DISASSEMBLY FOR FUNCTION [ship_a_kaji_animation gor_00.o] AT 805DF3F8 ---
805DF3F8:   loop 0
805DF400:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 5 -5 2000
805DF418:     loop 0
805DF420:       callc [evt_sub_intpl_msec_get_value_para evt_sub.o] LW(0) LW(1)
805DF430:       setff GW(0) LW(0)
805DF43C:       if_int_eq LW(1) 0
805DF448:         loop_break
805DF44C:       endif
805DF450:       wait_frames 1
805DF458:     end_loop
805DF45C:     callc [evt_sub_intpl_msec_init evt_sub.o] 11 -5 5 2000
805DF474:     loop 0
805DF47C:       callc [evt_sub_intpl_msec_get_value_para evt_sub.o] LW(0) LW(1)
805DF48C:       setff GW(0) LW(0)
805DF498:       if_int_eq LW(1) 0
805DF4A4:         loop_break
805DF4A8:       endif
805DF4AC:       wait_frames 1
805DF4B4:     end_loop
805DF4B8:   end_loop
805DF4BC:   return
805DF4C0:   end

--- START OF DISASSEMBLY FOR FUNCTION [ship_a_wakka_animation gor_00.o] AT 805DF4C4 ---
805DF4C4:   setff LW(0) 0.00
805DF4D0:   loop 0
805DF4D8:     if_int_eq GF(4) 0
805DF4E4:       if_int_eq GF(0) 0
805DF4F0:         addf LW(0) 0.10
805DF4FC:         if_int_ge LW(0) 10.00
805DF508:           setff LW(0) 10.00
805DF514:         endif
805DF518:       else
805DF51C:         subf LW(0) 0.07
805DF528:         if_int_le LW(0) 0.00
805DF534:           setff LW(0) 0.00
805DF540:         endif
805DF544:       endif
805DF548:       if_int_gt GW(1) 360.00
805DF554:         subf GW(1) 360.00
805DF560:       endif
805DF564:       if_int_lt GW(1) 0.00
805DF570:         addf GW(1) 360.00
805DF57C:       endif
805DF580:       addf GW(1) LW(0)
805DF58C:     endif
805DF590:     wait_frames 1
805DF598:   end_loop
805DF59C:   return
805DF5A0:   end

--- START OF DISASSEMBLY FOR FUNCTION [ship_a_entotsu_animation gor_00.o] AT 805DF5A4 ---
805DF5A4:   setff LW(0) 0.00
805DF5B0:   loop 0
805DF5B8:     if_int_eq GF(4) 0
805DF5C4:       if_int_eq GF(0) 0
805DF5D0:         addf LW(0) 0.10
805DF5DC:         if_int_ge LW(0) 10.00
805DF5E8:           setff LW(0) 10.00
805DF5F4:         endif
805DF5F8:       else
805DF5FC:         subf LW(0) 0.07
805DF608:         if_int_le LW(0) 0.00
805DF614:           setff LW(0) 0.00
805DF620:         endif
805DF624:       endif
805DF628:       if_int_gt GW(2) 360.00
805DF634:         subf GW(2) 360.00
805DF640:       endif
805DF644:       if_int_lt GW(2) 0.00
805DF650:         addf GW(2) 360.00
805DF65C:       endif
805DF660:       addf GW(2) LW(0)
805DF66C:     endif
805DF670:     wait_frames 1
805DF678:   end_loop
805DF67C:   return
805DF680:   end

--- START OF DISASSEMBLY FOR FUNCTION [ship_a_neji_animation gor_00.o] AT 805DF684 ---
805DF684:   setff LW(0) 0.00
805DF690:   loop 0
805DF698:     if_int_eq GF(4) 0
805DF6A4:       if_int_eq GF(0) 0
805DF6B0:         addf LW(0) 0.10
805DF6BC:         if_int_ge LW(0) 10.00
805DF6C8:           setff LW(0) 10.00
805DF6D4:         endif
805DF6D8:       else
805DF6DC:         subf LW(0) 0.07
805DF6E8:         if_int_le LW(0) 0.00
805DF6F4:           setff LW(0) 0.00
805DF700:         endif
805DF704:       endif
805DF708:       if_int_gt GW(3) 360.00
805DF714:         subf GW(3) 360.00
805DF720:       endif
805DF724:       if_int_lt GW(3) 0.00
805DF730:         addf GW(3) 360.00
805DF73C:       endif
805DF740:       addf GW(3) LW(0)
805DF74C:     endif
805DF750:     wait_frames 1
805DF758:   end_loop
805DF75C:   return
805DF760:   end

--- START OF DISASSEMBLY FOR FUNCTION [ship_a_yure_animation gor_00.o] AT 805DF764 ---
805DF764:   callc [fune_yure_func_init gor_00.o] 0.00
805DF770:   loop 0
805DF778:     setff LW(6) GW(6)
805DF784:     wait_frames 1
805DF78C:     loop 0
805DF794:       if_int_eq GF(4) 0
805DF7A0:         callc [fune_yure_func gor_00.o] 0 LW(6) GW(5) LW(10)
805DF7B8:         if_int_eq LW(10) 1
805DF7C4:           loop_break
805DF7C8:         endif
805DF7CC:       endif
805DF7D0:       wait_frames 1
805DF7D8:     end_loop
805DF7DC:     setff LW(6) GW(6)
805DF7E8:     loop 0
805DF7F0:       if_int_eq GF(4) 0
805DF7FC:         callc [fune_yure_func gor_00.o] 1 LW(6) GW(5) LW(10)
805DF814:         if_int_eq LW(10) 1
805DF820:           loop_break
805DF824:         endif
805DF828:       endif
805DF82C:       wait_frames 1
805DF834:     end_loop
805DF838:   end_loop
805DF83C:   return
805DF840:   end
