ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [move_champ tou_02.o] AT 805DFA8C ---
805DFA8C:   setii LW(10) 0
805DFA98:   loop 0
805DFAA0:     mo_set_base_int [move_pos tou_02.o]
805DFAA8:     loop 13
805DFAB0:       mo_read_int2 LW(0) LW(1)
805DFABC:       callc [evt_sub_random evt_sub.o] 5 LW(0)
805DFACC:       addi LW(0) 2
805DFAD8:       muli LW(0) 1000
805DFAE4:       wait_ms LW(0)
805DFAEC:       callc [evt_npc_get_position evt_npc.o] ["me"] LW(5) LW(6) LW(7)
805DFB04:       callc [evt_sub_random evt_sub.o] 100 LW(0)
805DFB14:       callc [evt_sub_random evt_sub.o] 100 LW(1)
805DFB24:       subi LW(0) 50
805DFB30:       addi LW(5) LW(0)
805DFB3C:       addi LW(6) 40
805DFB48:       subi LW(7) LW(1)
805DFB54:       callc [evt_msg_toge evt_msg.o] 2 LW(5) LW(6) LW(7)
805DFB6C:       callc [evt_end_count tou_02.o] LW(0)
805DFB78:       if_int_lt LW(0) 10
805DFB84:         return
805DFB88:       endif
805DFB8C:       begin_thread
805DFB90:         switchi LW(10)
805DFB98:           case_int_eq 0
805DFBA0:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_182"] 0 0
805DFBB8:           case_int_eq 1
805DFBC0:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_183"] 0 0
805DFBD8:           case_int_eq 2
805DFBE0:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_184"] 0 0
805DFBF8:           case_int_eq 3
805DFC00:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_185"] 0 0
805DFC18:           case_int_eq 4
805DFC20:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_186"] 0 0
805DFC38:           case_int_eq 5
805DFC40:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_187"] 0 0
805DFC58:           case_int_eq 6
805DFC60:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_188"] 0 0
805DFC78:           case_int_eq 7
805DFC80:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_189"] 0 0
805DFC98:           case_int_eq 8
805DFCA0:             callc [evt_msg_print evt_msg.o] 0 ["stg3_tou_186_01"] 0 0
805DFCB8:         end_switch
805DFCBC:       end_thread
805DFCC0:       addi LW(10) 1
805DFCCC:       if_int_gt LW(10) 8
805DFCD8:         setii LW(10) 0
805DFCE4:       endif
805DFCE8:     end_loop
805DFCEC:   end_loop
805DFCF0:   return
805DFCF4:   end
