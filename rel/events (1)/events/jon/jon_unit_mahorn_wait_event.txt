ttydasm v1.0 by PistonMiner, built on Wed Jul 19 12:47:35 2017


--- START OF DISASSEMBLY FOR FUNCTION [wait_event unit_mahorn.o] AT 80CDB2D4 ---
80CDB2D4:   callc [btlevtcmd_GetUnitWork battle_event_cmd.o] -2 4 LW(0)
80CDB2E8:   if_int_eq LW(0) 0
80CDB2F4:     callc [mahorn_get_bunsin unit_mahorn.o] LW(1) LW(2) LW(3) LW(4) LW(0)
80CDB310:     callc [btlevtcmd_AnimeChangePoseFromTable battle_event_cmd.o] -2 1
80CDB320:     if_int_ne LW(1) -1
80CDB32C:       callc [btlevtcmd_AnimeChangePoseFromTable battle_event_cmd.o] LW(1) 1
80CDB33C:     endif
80CDB340:     if_int_ne LW(2) -1
80CDB34C:       callc [btlevtcmd_AnimeChangePoseFromTable battle_event_cmd.o] LW(2) 1
80CDB35C:     endif
80CDB360:     if_int_ne LW(3) -1
80CDB36C:       callc [btlevtcmd_AnimeChangePoseFromTable battle_event_cmd.o] LW(3) 1
80CDB37C:     endif
80CDB380:     if_int_ne LW(4) -1
80CDB38C:       callc [btlevtcmd_AnimeChangePoseFromTable battle_event_cmd.o] LW(4) 1
80CDB39C:     endif
80CDB3A0:   endif
80CDB3A4:   callc [btlevtcmd_CheckStatus battle_event_cmd.o] -2 9 LW(13)
80CDB3B8:   callc [btlevtcmd_CheckStatus battle_event_cmd.o] -2 1 LW(14)
80CDB3CC:   callc [btlevtcmd_CheckStatus battle_event_cmd.o] -2 2 LW(15)
80CDB3E0:   ori LW(15) LW(13)
80CDB3EC:   ori LW(15) LW(14)
80CDB3F8:   if_int_ne LW(15) 0
80CDB404:     callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 2 ["MAH_Z_2"]
80CDB418:     callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 3 ["MAH_Z_2"]
80CDB42C:     callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 4 ["MAH_Z_2"]
80CDB440:     callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 5 ["MAH_Z_2"]
80CDB454:   else
80CDB458:     begin_child_thread
80CDB45C: 10:
80CDB464:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 2 ["MAH_S_4A"]
80CDB478:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB488:       addi LW(0) 15
80CDB494:       wait_frames LW(0)
80CDB49C:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 2 ["MAH_S_4B"]
80CDB4B0:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB4C0:       addi LW(0) 15
80CDB4CC:       wait_frames LW(0)
80CDB4D4:       goto 10
80CDB4DC:     end_child_thread
80CDB4E0:     begin_child_thread
80CDB4E4: 11:
80CDB4EC:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 3 ["MAH_S_4A"]
80CDB500:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB510:       addi LW(0) 15
80CDB51C:       wait_frames LW(0)
80CDB524:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 3 ["MAH_S_4B"]
80CDB538:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB548:       addi LW(0) 15
80CDB554:       wait_frames LW(0)
80CDB55C:       goto 11
80CDB564:     end_child_thread
80CDB568:     begin_child_thread
80CDB56C: 12:
80CDB574:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 4 ["MAH_S_4A"]
80CDB588:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB598:       addi LW(0) 15
80CDB5A4:       wait_frames LW(0)
80CDB5AC:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 4 ["MAH_S_4B"]
80CDB5C0:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB5D0:       addi LW(0) 15
80CDB5DC:       wait_frames LW(0)
80CDB5E4:       goto 12
80CDB5EC:     end_child_thread
80CDB5F0:     begin_child_thread
80CDB5F4: 13:
80CDB5FC:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 5 ["MAH_S_4A"]
80CDB610:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB620:       addi LW(0) 15
80CDB62C:       wait_frames LW(0)
80CDB634:       callc [btlevtcmd_AnimeChangePose battle_event_cmd.o] -2 5 ["MAH_S_4B"]
80CDB648:       callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB658:       addi LW(0) 15
80CDB664:       wait_frames LW(0)
80CDB66C:       goto 13
80CDB674:     end_child_thread
80CDB678:   endif
80CDB67C:   begin_child_thread
80CDB680: 0:
80CDB688:     callc [set_hand_dest unit_mahorn.o] -2 2 -25.00 30.00 -10.00
80CDB6A4:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB6B4:     addi LW(0) 15
80CDB6C0:     wait_frames LW(0)
80CDB6C8:     callc [set_hand_dest unit_mahorn.o] -2 2 -15.00 40.00 -10.00
80CDB6E4:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB6F4:     addi LW(0) 15
80CDB700:     wait_frames LW(0)
80CDB708:     goto 0
80CDB710:   end_child_thread
80CDB714:   begin_child_thread
80CDB718: 1:
80CDB720:     callc [set_hand_dest unit_mahorn.o] -2 3 25.00 30.00 10.00
80CDB73C:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB74C:     addi LW(0) 15
80CDB758:     wait_frames LW(0)
80CDB760:     callc [set_hand_dest unit_mahorn.o] -2 3 15.00 40.00 10.00
80CDB77C:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB78C:     addi LW(0) 15
80CDB798:     wait_frames LW(0)
80CDB7A0:     goto 1
80CDB7A8:   end_child_thread
80CDB7AC:   begin_child_thread
80CDB7B0: 2:
80CDB7B8:     callc [set_hand_dest unit_mahorn.o] -2 4 -25.00 10.00 -10.00
80CDB7D4:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB7E4:     addi LW(0) 15
80CDB7F0:     wait_frames LW(0)
80CDB7F8:     callc [set_hand_dest unit_mahorn.o] -2 4 -15.00 0.00 -10.00
80CDB814:     callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB824:     addi LW(0) 15
80CDB830:     wait_frames LW(0)
80CDB838:     goto 2
80CDB840:   end_child_thread
80CDB844: 3:
80CDB84C:   callc [set_hand_dest unit_mahorn.o] -2 5 25.00 10.00 10.00
80CDB868:   callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB878:   addi LW(0) 15
80CDB884:   wait_frames LW(0)
80CDB88C:   callc [set_hand_dest unit_mahorn.o] -2 5 15.00 0.00 10.00
80CDB8A8:   callc [evt_sub_random evt_sub.o] 15 LW(0)
80CDB8B8:   addi LW(0) 15
80CDB8C4:   wait_frames LW(0)
80CDB8CC:   goto 3
80CDB8D4:   return
80CDB8D8:   end
